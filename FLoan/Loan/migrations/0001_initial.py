# Generated by Django 3.1 on 2020-09-20 20:17

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Borrower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('DOB', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('net_income', models.FloatField(default=0)),
                ('ssn', models.CharField(max_length=8)),
                ('IDCard', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='CreditProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('maxAmount', models.FloatField(default=1)),
                ('minAmount', models.FloatField(default=1)),
                ('maxTerm', models.IntegerField(default=1)),
                ('minTerm', models.IntegerField(default=1)),
                ('minNetIncome', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FeeAmount', models.FloatField(default=0)),
                ('FeeUsage', models.CharField(choices=[('E', 'Every payment'), ('F', 'First payment'), ('L', 'Last payment')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('DateOfDisburse', models.DateField(default=datetime.date.today, null=True)),
                ('DateOfClose', models.DateField(default=datetime.date.today, null=True)),
                ('IsActive', models.BooleanField(default=False)),
                ('TotalToPay', models.FloatField(default=0)),
                ('Decision', models.CharField(blank=True, max_length=15, null=True)),
                ('ClientDecision', models.BooleanField(default=True)),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loan.borrower')),
                ('credit_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Loan.creditproduct')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('IsLoanOfficer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateOfPayment', models.DateField()),
                ('PaymentAmount', models.FloatField(default=0)),
                ('FeePaid', models.FloatField(default=0)),
                ('Loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loan.loan')),
            ],
        ),
        migrations.AddField(
            model_name='creditproduct',
            name='fee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Loan.fee'),
        ),
        migrations.AddField(
            model_name='borrower',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Loan.user'),
        ),
    ]
